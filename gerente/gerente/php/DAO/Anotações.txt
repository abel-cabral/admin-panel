Devo colocar a chave primaria da tabela republica na tabela moradores 

cria uma coluna em moradores com mesma característica da que faremos foreign key

alter table moradores add column nome_qualquer int;
alter table moradores add foreign key(nome_qualquer) references republica(id_republica);

Como unir os dados das duas tabelas;


//Com esse comando eu listo todos que estão atualmente relacionados a republica
select m.*, r.* from moradores as m join republicas as r ON r.id_republica = m.moradia order by m.nome";

O 'ON' serve pra fazer a filtragem dos dados, é ele que liga quem é de quem.
O 'AS' é um apelido definido para a tabela.

//Já com esse eu listo todos que estão ou já estiveram na republica.
select m.*, r.* from moradores as m left outer join republicas as r ON r.id_republica = m.moradia order by m.nome"

Listar Pessoas Por tipo de quarto em suas repúblicas
select m.*, r.* from moradores as m join republicas as r on m.moradia = r.id_republica where m.moradia = 1 and m.quarto = 'Quadruplo' 

Cruza as 3 tabelas capturando as relações entre si e os dados dos moradores;
select m.*, q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica;


Selecionando por republica
select m.*, q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica 

Seleciona Republica por nome cruzando tabela informando Republica de origem e tipo de quarto
select m.*, q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica where m.moradia = 1 and m.quarto = 2 order by m.nome


fazendo o SQL contar
select COUNT(m.moradia), q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica where m.moradia = 1 order by m.nome 

Cruza Republica com tipo de quarto e com o sexo, contando o numero de pessoas ocupando
select count(m.sexo),m.*, q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica where m.moradia = 1 and m.sexo = 'F' and m.quarto=2 order by m.nome 

/*
            //Centro            
            01//Quadruplo 
            02//Duplo 
            
            //Inga            
            03//Quadruplo
            04//Duplo 
            
            //Vermelha            
            05//Quadruplo
            06//Duplo 
*/

select count(m.sexo) as cs, count(m.moradia) as cm, m.*, q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica where m.moradia = 1 and m.sexo = 'F' and m.quarto=2 order by m.nome 

contando
m.moradia = Vou saber quantas pessoas estão naquela moradia:
select count(m.moradia), m.*, q.*, r.nome_republica from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica where m.moradia = 1;

m.sexo quantas pessoas do sexo estão apelido



Achando os valor total das vagas ofertadas
select r.duplo_masculino + r.duplo_feminino + r.quadruplo_masculino + r.quadruplo_feminino as soma, m.*, q.*, r.* from moradores as m join quartos as q on m.quarto = q.id_quarto join republicas as r on m.moradia = r.id_republica where m.moradia=1 


Atualiza o numero de vagas
UPDATE republicas SET duplo_masculino = 7, duplo_feminino = 10, quadruplo_masculino = 18, quadruplo_feminino = 50 WHERE id_republica = 1


//Número de Vagas Ofertadas
function vagas_tipo(status, id_republica) {//Conta o total de vagas suportado

    $.ajax({
        type: 'POST',
        url: './php/funcoes.php',
        data: {
            'status': status,
            'id_republica': id_republica            
        },
        cache: false,
        dataType: 'JSON',
        success: function(data) {
            var votevalue = (parseInt($("#r1").text()) / parseInt(data)) * 100;            
            $('#rvagas').html(parseInt(votevalue)+'% Ocupada');
        }
    })

}






<?php
session_start();
include_once('./DAO/dao.php');
include_once('./conexao.php');



@$nome = $_POST['nome'];
@$senha = $_POST['senha'];

//Váriavel de Decisão
@$status = isset($_POST['status'])? $_POST['status'] : $_GET['status'];//Se não houver um POST, status receberá um GET se houver




//Captura valores do POST de Login



//Login do ADM
if($status == '1'){
    $usuarios_index = new UsuarioDAO();
    $buscar = $usuarios_index->login($nome, $senha);
    if($buscar){        
        $_SESSION['status'] = true;
        $_SESSION['resultado'] = mysqli_fetch_array($buscar, MYSQL_ASSOC);//Esse Array captura todos os valores no BD            
    }
}
//Deslogar ADM
elseif($status == '2'){    
    session_destroy();
}
//Cadastrar Morador
elseif($status == '3'){
    $usuarios_index = new UsuarioDAO();
    $buscar = $usuarios_index->cadastro(transformar($_POST['nome']), $_POST['sexo'], $_POST['tel'], transformar($_POST['curso']), $_POST['mensalidade'], $_POST['quarto']);     
}
//Listar Todos Moradores
elseif($status == '4'){
    $usuarios_index = new UsuarioDAO();
    $buscar = $usuarios_index->consultarTodosMoradores();    
    
    if($buscar == true){
        
        //Aqui usamos um for pra fazer uma repetição baseado no nª de elementos encontrados
        for ($i = 0; $i < mysqli_num_rows($buscar); $i++){
            
            //Puxamos os resultados em forma de array
            $linha = mysqli_fetch_array($buscar, MYSQL_ASSOC);
            
            //Organizando a saida do array do SQL, para nosso Json de resposta.
            $resposta[] = array(
                'id_morador' => $linha['id_morador'],
                'nome' => $linha['nome'],
                'sexo' => $linha['sexo'],
                'telefone' => $linha['telefone'],
                'curso' => $linha['curso'],
                'mensalidade' => $linha['mensalidade'],
                'quarto' => $linha['quarto'],
                'nome_republica' => $linha['nome_republica']   //MUDar                                                             
            );        
        }
    }
    //json_encode — Retorna a representação JSON de um valor
    echo json_encode($resposta);    
    
}
//Deletar Morador
elseif($status == '5'){
    $usuarios_index = new UsuarioDAO();
    $buscar = $usuarios_index->deletar_morador($_GET['id_morador']);
    header("Location: ../moradores.php");    
}
//Contar Vagas
elseif($status == '6'){
    @session_destroy($_SESSION['total']);
    $usuarios_index = new UsuarioDAO();//total de republicas, 

    
    for($c=1;$c<=3;$c++){
    
    $buscar = $usuarios_index->vaga_ocupada($c);//contar na tabela, republica, sexo, tipo de quarto

    if($buscar == true){
        
        //Aqui usamos um for pra fazer uma repetição baseado no nª de elementos encontrados
        for ($i = 0; $i < mysqli_num_rows($buscar); $i++){
            
            //Puxamos os resultados em forma de array
            $linha = mysqli_fetch_array($buscar, MYSQL_ASSOC);
            
            //Organizando a saida do array do SQL, para nosso Json de resposta.
            $resposta[$c] = array(
                'id_morador' => $linha['id_morador'],
                'nome' => $linha['nome'],
                'sexo' => $linha['sexo'],
                'telefone' => $linha['telefone'],
                'curso' => $linha['curso'],
                'mensalidade' => $linha['mensalidade'],
                'quarto' => $linha['tipo_quarto'],
                'nome_republica' => $linha['nome_republica'],                                
                'valor_quarto' => $linha['valor_quarto'],
                'conte' => $linha['conte'],
                'id_republica' => $linha['id_republica']              
            );        
        }
    }
    }
    //json_encode — Retorna a representação JSON de um valor    
  $_SESSION['total'] = $resposta;//Só chama no php por essa essão dando um echo     
}
//Contar Vagas Duplas
elseif($status == '7'){
    @session_destroy($_SESSION[$_GET['tipo_vaga']]);
    $usuarios_index = new UsuarioDAO();
    for($c=1;$c<=3;$c++){
    
        $buscar = $usuarios_index->vaga_dupla($c, $_GET['sexo']);//contar na tabela, republica, sexo, tipo de quarto
    
        if($buscar == true){
            
            //Aqui usamos um for pra fazer uma repetição baseado no nª de elementos encontrados
            for ($i = 0; $i < mysqli_num_rows($buscar); $i++){
                
                //Puxamos os resultados em forma de array
                $linha = mysqli_fetch_array($buscar, MYSQL_ASSOC);
                
                //Organizando a saida do array do SQL, para nosso Json de resposta.
                $resposta[$c] = array(
                    'id_morador' => $linha['id_morador'],
                    'nome' => $linha['nome'],
                    'sexo' => $linha['sexo'],
                    'telefone' => $linha['telefone'],
                    'curso' => $linha['curso'],                      
                    'mensalidade' => $linha['mensalidade'],
                    'quarto' => $linha['tipo_quarto'],
                    'nome_republica' => $linha['nome_republica'],                                
                    'valor_quarto' => $linha['valor_quarto'],
                    'duplaF' => $linha['dupla'],
                    'id_republica' => $linha['id_republica']                  
                );        
            }
        }
        }
        //json_encode — Retorna a representação JSON de um valor    
          
       $_SESSION[$_GET['tipo_vaga']] = $resposta;  
       echo json_encode($resposta); 

}
/*
//Conta vagas Quadruplas
elseif($status == '8'){
    @session_destroy($_SESSION[$_GET['tipo_vaga']]);
    $usuarios_index = new UsuarioDAO();
    for($c=1;$c<=3;$c++){
    
        $buscar = $usuarios_index->vaga_quadrupla($c, $_GET['sexo']);//contar na tabela, republica, sexo, tipo de quarto
    
        if($buscar == true){
            
            //Aqui usamos um for pra fazer uma repetição baseado no nª de elementos encontrados
            for ($i = 0; $i < mysqli_num_rows($buscar); $i++){
                
                //Puxamos os resultados em forma de array
                $linha = mysqli_fetch_array($buscar, MYSQL_ASSOC);
                
                //Organizando a saida do array do SQL, para nosso Json de resposta.
                $resposta[$c] = array(
                    'id_morador' => $linha['id_morador'],
                    'nome' => $linha['nome'],
                    'sexo' => $linha['sexo'],
                    'telefone' => $linha['telefone'],
                    'curso' => $linha['curso'],
                    'mensalidade' => $linha['mensalidade'],
                    'quarto' => $linha['tipo_quarto'],                                                    
                    'nome_republica' => $linha['nome_republica'],                                
                    'valor_quarto' => $linha['valor_quarto'],
                    'quad' => $linha['quad'],
                    'id_republica' => $linha['id_republica']                
                );        
            }
        }
        }
        //json_encode — Retorna a representação JSON de um valor              
     $_SESSION[$_GET['tipo_vaga']] = $resposta;         

}
//Vagas que deseja oferecer
elseif($status == '9'){
    $usuarios_index = new UsuarioDAO();
    $buscar = $usuarios_index->numero_vagas($_POST['id_republica'], $_POST['dM'],$_POST['dF'],$_POST['qM'],$_POST['qF']);//contar na tabela, republica, sexo, tipo de quarto        
}
//Vagas que deseja oferecer
elseif($status == '10'){
    $usuarios_index = new UsuarioDAO();
    $buscar = $usuarios_index->total_total($_POST['id_republica']);//Conta o total de vagas abertas pra aluguel 

    if($buscar == true){
        $linha = mysqli_fetch_array($buscar, MYSQL_ASSOC);
        $resposta = $linha;
        
        echo $resposta['soma']; 
        
        
    }
}
//Em Caso de Erro do Nº do Status
else{    
    echo('Não recebi o Númerador do Status!');
}

*/
//---------------------------------------------------------------------------- DEMAIS FUNÇÕES COMPLEMENTARES ----------------------------------------------------------------//

//Passa pra utf-8 e 1 letras das palavras em maiúscula
function transformar($texto){
    return ucwords($texto);
}


swal({//Animação para escolha
                    title: "Confirme Sua Escolha?",
                    text: "Deseja Remover Esse Morador de Sua República",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                  })
                  .then((willDelete) => {
                    if (willDelete) {//Se sim executa o ajax de gravar
                        $.ajax({
                            type: 'POST',
                            url: './php/funcoes.php',
                            data: $('#form_republica_vaga').serialize()+'&status=9&id_republica='+id_republica, //Captura todos os valores no FORM e faz um OBJ. 
                            cache: false,
                            success: function() {
                                swal("O Morador foi Removido.", {
                                    icon: "success",
                                }); 
                                location.reload();                                                    
                            }
                        })
                      
                    } else {//se não só exibe a mensagem
                      swal("Morador Mantido."); 
                      $('#form_republica_vaga').trigger("reset");//Isso Reseta nossos campos do formulario                 
                    }
                    
                  });

                  ./php/funcoes.php?status=5&id_morador={{id}}





































?>



